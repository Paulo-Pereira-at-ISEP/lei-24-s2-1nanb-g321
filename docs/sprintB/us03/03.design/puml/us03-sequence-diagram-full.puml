@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox

actor "Human Resource Manager" as HRM
participant ":CreateEmployeelUI" as UI
participant ":CreateEmployeelController" as controller
participant ":Repositories" as singleton
participant ":Organization" as org
participant ":Employee" as Employee



activate HRM

        HRM -> UI : asks to register a new employee

        activate UI
            'create controller
            UI -> controller** : create

            activate controller

                controller-> singleton : getInstance()

                activate singleton

                    singleton --> controller : repositories

                deactivate singleton

                controller -> org : getAllEmployees()

                activate org


                    org --> controller : employeeRep
                    controller --> Employee : Employee()
                    activate Employee

                    Employee --> controller : Employee()

                    deactivate Employee
                    deactivate rep




            'requests the HRM to input data
            UI --> HRM : requestData (name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)
        deactivate UI

        HRM -> UI : types requested data

        activate UI

            UI -> UI : validateEmployeeData(name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)
        activate rep

            controller -> rep : getJobRepository()
            rep --> controller : jobRepository
            controller --> JobRep : getAllJobs()
            activate JobRep
            JobRep --> controller : getAllJobs()
            deactivate JobRep
        deactivate rep

            controller --> UI : getAllJobs()

            UI --> HRM : shows list of jobs and asks to select one

            HRM -> UI : selects job
            controller --> UI : Employee()
           UI -> controller : createEmployee(name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)

                   deactivate UI

            activate controller


                controller -> Employee : Employee(name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)

                activate Employee

                Employee --> controller : newEmployee

                deactivate Employee

                controller -> EmployeeRepository : add(newEmployee)

                activate EmployeeRepository

                    EmployeeRepository -> EmployeeRepository : validateEmployee(newEmployee)


                    EmployeeRepository --> controller : newEmployee

                deactivate EmployeeRepository

            controller --> UI : newEmployee


        deactivate controller
activate UI
        UI -> HRM : displays success operation

    deactivate UI

deactivate HRM

@enduml