@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox

actor "Human Resource Manager" as HRM
participant ":CreateEmployeelUI" as UI
participant ":CreateEmployeelController" as controller
participant ":Repositories" as singleton



participant "repositories\n:Repositories" as rep


participant "skillRepository:\nEmployeeRepository" as skillRep
participant ":Skill" as SKILL

activate HRM

        HRM -> UI : asks to register a new employee

        activate UI
            'create CTRL
            UI -> controller** : create

            activate CTRL

                CTRL -> singleton : getInstance()

                activate singleton

                    singleton --> controller : repositories

                deactivate singleton

                controller -> rep : getEmployeeRepository()

                activate rep

                    rep --> controller : EmployeeRepository

                deactivate rep

            deactivate controller


            'requests the HRM to input data
            UI --> HRM : requestData (name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)
        deactivate UI

        HRM -> UI : types requested data

        activate UI

            UI -> UI : validateEmployeeData(name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)


            deactivate controller

            UI --> HRM : shows Employee data and requests confirmation

        deactivate UI

            HRM -> UI : confirms data

        activate UI

            UI -> controller : createEmployee(name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)

            activate controller


                controller -> Employee : Employee(name, birthDate, admissionDate, adress, email, mobile, docIdType, docIdNum, TaxPayerNum)

                activate Employee

                Employee --> controller : newEmployee

                deactivate Employee

                controller -> EmployeeRepository : add(newEmployee)

                activate EmployeeRepository

                    EmployeeRepository -> EmployeeRepository : validateEmployee(newEmployee)


                    EmployeeRepository --> controller : newEmployee

                deactivate EmployeeRepository

            controller --> UI : newEmployee


        deactivate controller

        UI -> HRM : displays success operation

    deactivate UI

deactivate HRM

@enduml