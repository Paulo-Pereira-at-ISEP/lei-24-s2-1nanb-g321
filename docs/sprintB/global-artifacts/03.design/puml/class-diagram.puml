@startuml
skinparam classAttributeIconSize 0
skinparam linetype polyline


class ApplicationSession
{
  +static getInstance()
  +getCurrentSession()
}

class UserSession
{
  +isLoggedInWithRole(USER_ROLE)
}

class "{NameOfUC}Controller" {
    + {NameOfUC}Controller()
    + methodX(...)
}

class "{NameOfUC}UI" {
}


class MainMenuUI{
    run()
}

class AuthenticationUI{
    +run()
    -getMenuItemForRoles()
    -doLogin()
    -logout()
}

class HRMUI{
    run()
}

class VFMUI{
    run()
}

class CreateJobController {
    -getEmployeeFromSession()
    + CreateJobController(jobRepository)
    + validateJobData(jobName, jobDescription)
    + addJobToRepo(newJob)


}


class CreateJobUI {
    +run()
    +requestData(jobName, jobDescription)
    +submitData()
}



class Employee{
    -name:String
    -birthdate:Date
    -admissionDate:Date
    -address
    -mobileContact:String
    -emailContact:String
    -IDdocType:String
    -IDnumber:String
    -taxNumber:String

    +Employee (String nome,LocalDate dateOfBirth,\nLocalDate admissionDate, String morada, int telemovel,\nString email, String idDocType, int docTypeNumber,\nint taxPayerIdNumber, String role, Job job)
}

class Repositories{
    - instance:Repositories
    - skillRepository:JobRepository
    - jobRepository:JobRepository
    - employeeRepository:EmployeeRepository
    - authenticationRepository:AuthenticationRepository


    + getInstance()
    + getSkillRepository()
    + getJobRepository()
    + getEmployeeRepository()
    + getAuthenticationRepository()
}

class JobRepository{
    + createJob(jobName, jobDescription, creator)
    + validateJob(newJob)
    + addJob(newJob)
}

class Job {
    -jobName:String
    -jobDescription:String
    -creator:Employee

    +Job(jobName, jobDescription, creator)
    +validateJobData(jobName, jobDescription, creator)
}


class CreateSkillController {
    - getEmployeeFromSession()
    + CreateSkillController(skillRepository)
    + validateSkillData(skillName, skillDescription)
    + addSkillToRepo(newSkill)

}


class CreateSkillUI {
    +run()
    +requestData(skillName, skillDescription)
    +submitData()
}



class SkillRepository{
    + createSkill(skillName, skillDescription, creator)
    + validateSkill(newSkill)
    + addSkill(newSkill)
}

class Skill {
    -skillName:String
    -skillDescription:String
    -creator:Employee

    +Skill(skillName, skillDescription, creator)
    +validateSkillData(skillName, skillDescription, creator)
}


MainMenuUI ..> AuthenticationUI: creates

AuthenticationUI ..> HRMUI : creates
AuthenticationUI ..> VFMUI : creates

HRMUI ..> CreateSkillUI : creates
HRMUI ..> CreateJobUI : creates

CreateJobUI ..> CreateJobController

CreateJobController "1" --> "1" Repositories : getInstance
Repositories "1" ..> "1" JobRepository : create
JobRepository ..> Job : createJob
Employee "1" --> "1" Job : has a


CreateSkillUI ..> CreateSkillController

CreateSkillController "1" --> "1" Repositories : getInstance
Repositories "1" ..> "1" SkillRepository : create
SkillRepository ..> Skill : createSkill
Employee "1" --> "0..*" Skill : has a set of


"{NameOfUC}UI" ..> "{NameOfUC}Controller"
"{NameOfUC}Controller" ..> ApplicationSession
"{NameOfUC}Controller" ..> UserSession

@enduml