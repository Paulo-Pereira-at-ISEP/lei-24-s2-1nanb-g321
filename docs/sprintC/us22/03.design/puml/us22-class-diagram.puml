@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

Package Controller <<Folder>>{
class CreateEntryToAgendaController {
    - toDoListRepository : ToDoListRepository
    - agendaRepository : AgendaRepository
    + createEntryToAgenda(String name, String description, String urgencyDegree, int duration, GreenSpace greenSpace, LocalDate date, int hour)
}
}
Package UI <<Folder>>{
class CreateEntryToAgendaUI {
    + run()
    + requestData()
    + submitData()
    + requestEntries()
    + requestDate()
    + requestStartingHour()
}
}


Package Domain <<Folder>>{
class Entry {
    - String name
    - String description
    - String urgencyDegree
    - int duration
    - GreenSpace greenSpace
    - String status
    - LocalDate entryDate
    - int hour
    + Entry(String name, String description, String urgencyDegree, int duration, GreenSpace greenSpace, LocalDate date, int hour)

}
}
Package Repositories <<Folder>>{
class Repositorie {
    - Repositories()
    + getInstance() : Repositories
    + getToDoListRepository() : ToDoListRepository
    + getAgendaRepository() : AgendaRepository
}
}
Package Repositories <<Folder>>{
class ToDoListRepository {
    + getAllEntries() : List<Entry>
}
}

Package Repositories <<Folder>>{
class AgendaRepository {
    + getAllEntriesToAgenda() : List<Entry>
    + addNewEntry()
}
}

CreateEntryToAgendaUI "1" --> "1" CreateEntryToAgendaController : uses
CreateEntryToAgendaController ..> Repositorie : gets repositories
Repositorie --> Repositorie : instance
Repositorie "1" --> "1" ToDoListRepository : toDoListRepository
Repositorie "1" --> "1" AgendaRepository : agendaRepository

CreateEntryToAgendaController ..> Entry : create new entry
Entry --> CreateEntryToAgendaController : newEntry
CreateEntryToAgendaController ..> AgendaRepository : add newEntry

@enduml
