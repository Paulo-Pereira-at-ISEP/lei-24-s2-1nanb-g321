@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Vehicle Fleet Manager" as VFM
participant ":ListVehiclesPendingMaintenanceUI" as UI
participant ":ListVehiclesPendingMaintenanceController" as controller
participant ":Repositories" as singleton
participant "repositories\n:Repositories" as rep
participant "vehicleRepository\n:vehicleRepository" as vehicleRepository
participant "authenticationRepository\n:AuthenticationRepository" as AUTH_REPO
participant "userSession\n:UserSession" as USR_SESSION
participant ":Vehicle" as vehicle
participant ":VehicleMaintenance" as VehicleMaintenance
participant ":VehicleMaintenances" as VehicleMaintenances

note right of VFM
    - The user is already logged in at this step.
    - Authentication sequence is explained in
    a sequence excerpt.
end note

note right of singleton
    - Singleton is
    in use
end note

activate VFM

        VFM -> UI :asks to list vehicle's in need for a check-up

        activate UI

            UI -> controller** : create

            UI -> controller : asks for a list of the vehicles pending maintenance
            activate controller

                controller -> singleton : getInstance()
                activate singleton

                    singleton --> controller: repositories
                deactivate singleton

                controller -> singleton : getEmployeeFromSession()

                note right of controller
                    - This method is explained
                    in detail in an excerpt
                    sequence diagram.
                end note

                activate singleton

                singleton --> controller : employee

                deactivate singleton

                controller -> rep : getVehicleRepository()
                activate rep

                    rep --> controller: vehicleRepository
                deactivate rep

                controller -> vehicleRepository : getAllVehicles()
                activate vehicleRepository

                    vehicleRepository --> controller : vehicles
                deactivate vehicleRepository

                loop for each vehicle

                controller -> vehicle: getMaintenanceFrequency()
                activate vehicle

                vehicle --> controller: MaintenanceFrequency
                deactivate vehicle

                controller -> vehicle: getLastMaintenance()
                activate vehicle

                vehicle --> controller: lastMaintenance
                deactivate vehicle

                controller -> vehicle: getCurrentKm()
                activate vehicle

                vehicle --> controller: currentKm
                deactivate vehicle

                controller -> VehicleMaintenance: vehicleMaintenance(MaintenanceFrequency, lastMaintenance)
                activate VehicleMaintenance

                VehicleMaintenance --> VehicleMaintenance: validateVehicleMaintenance

                VehicleMaintenance --> VehicleMaintenances: vehicleMaintenance
                deactivate VehicleMaintenance
                activate VehicleMaintenances

                end

                VehicleMaintenances -> controller: vehiclesWithPendingMaintenanceList
                deactivate VehicleMaintenances

                controller --> UI : vehiclesWithPendingMaintenanceList
            deactivate controller

            UI --> VFM : shows vehicles that need Maintenance
        deactivate UI

deactivate VFM

@enduml
