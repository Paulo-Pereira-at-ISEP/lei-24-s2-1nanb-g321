@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction
Package Controller <<Folder>>{
    class RecordTaskCompletionController {
        + getEntriesFromAgendaStartingFrom(currentDate, status="Planned")
        + recordTaskAsCompleted(selectedEntry)

    }
}

Package UI <<Folder>>{
    class RecordTaskCompletionUI {
        +run()
    }
}

Package RepositoriesPkg <<Folder>>{
    class Repositories{
        - instance : Repositories
        - Repository : SkillRepository
        - jobRepository : JobRepository
        - employeeRepository : EmployeeRepository


        + getInstance() : Repositories
        + getSkillRepository()
        + getJobRepository()
        + getCollaboratorRepository()
        + getAgendaRepository()
    }

    class AgendaRepository{
        + getEntriesFromAgendaStartingFrom(currentDate, status)
        + getEntriesFromAgendaPriorTo(currentDate, status)
    }



    class CollaboratorRepository{


        + getAll()
    }

    class AuthenticationRepository{

        + getAll()
    }
}

Package Domain <<Folder>>{
    class Entry {
        - String name
        - String description
        - String urgencyDegree
        - int duration
        - GreenSpace greenSpace
        - String status
        - LocalDate entryDate
        - int hour
        + Entry(String name, String description, String urgencyDegree,\n int duration, GreenSpace greenSpace, LocalDate date, int hour)

    }

    class Collaborator{
        -name:String
        -birthdate:Date
        -admissionDate:Date
        -address
        -mobileContact:String
        -emailContact:String
        -IDdocType:String
        -IDnumber:String
        -taxNumber:String
        -job:Job
        -skills:Skill
        -teams:Team

        +Collaborator (String nome,LocalDate dateOfBirth,\nLocalDate admissionDate, String morada, int telemovel,\nString email, String idDocType, int docTypeNumber,\nint taxPayerIdNumber, String role, Job job, List<Skill> skills,\n List<Team> teams)

        + recordTaskAsCompleted(selectedEntry, employee))
    }
}


RecordTaskCompletionUI "1" ..> "1" RecordTaskCompletionController


AuthenticationRepository -> Collaborator


Repositories --> Repositories : instance
Repositories"1" -->"1" AuthenticationRepository
Repositories "1" --> "1" AgendaRepository
Repositories"1" -->"1" CollaboratorRepository
CollaboratorRepository"1" -->"*" Collaborator

AgendaRepository"1" ->"*" Entry
Collaborator -> Entry

RecordTaskCompletionController -> CollaboratorRepository
RecordTaskCompletionController -> AgendaRepository
RecordTaskCompletionController "1" ..> "1" Repositories : repositories
RecordTaskCompletionController "1" --> "1" AuthenticationRepository : getCurrentUserSession

@enduml