@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

Package UI <<Folder>>{
class ListMyGreenSpacesUI {
    +run()
}
}

Package Controller <<Folder>>{
class CreateGreenSpacesController {
    - greenSpacesRepository:GreenSpacesRepository
    - authenticationRepository:AuthenticationRepository

    - getEmployeeFromSession()
    + getGreenSpacesManaged(String email)
}
}


Package Repository <<Folder>>{
class Repositories{
    - instance: Repositories
    - authenticationRepository: AuthenticationRepository
    - managerRepository: ManagerRepository
    - greenSpacesRepository: GreenSpacesRepository

    + getInstance()
    + getAuthenticationRepository()
    + getManagerRepository()
    + getGreenSpacesRepository()
}
}

Package Repository <<Folder>>{
class GreenSpacesRepository{
    + getAllGreenSpaces()
    + getGreenSpacesManaged(String email)
    + validateGreenSpace(GreenSpace)
    + addGreenSpace(GreenSpace)
}
}

Package Repository <<Folder>>{
class AuthenticationRepository{
    + getEmployeeFromSession()
}
}

Package Domain <<Folder>>{
class GreenSpace {
    - String name
    - double area
    - String classification
    - Employee manager

    + GreenSpace(String name, double area, String classification, Employee manager)
}
}

Package Domain <<Folder>>{
class Manager{
    -name:String
    -birthdate:Date
    -admissionDate:Date
    -address
    -mobileContact:String
    -emailContact:String
    -IDdocType:String
    -IDnumber:String
    -taxNumber:String
    -job:Job

    +Manager (String nome,LocalDate dateOfBirth,\nLocalDate admissionDate, String morada, int telemovel,\nString email, String idDocType, int docTypeNumber,\nint taxPayerIdNumber, String role, Job job)
}
}

interface SortAlgoritm {
}

ListMyGreenSpacesUI "1" ..> "1" CreateGreenSpacesController

CreateGreenSpacesController "1" --> "1" Repositories : getInstance
CreateGreenSpacesController --> GreenSpacesRepository : greenSpacesRepository
CreateGreenSpacesController --> AuthenticationRepository : authenticationRepository
CreateGreenSpacesController --> Manager

Repositories -> Repositories : instance
Repositories "1" ..> "1" GreenSpacesRepository : create
Repositories "1" --> "1" AuthenticationRepository : getCurrentUserSession

AuthenticationRepository --> Manager : getCurrentUserSession

GreenSpacesRepository --> GreenSpace : have
GreenSpacesRepository --> SortAlgoritm : sortList

Manager --> GreenSpace
Manager --> SortAlgoritm

@enduml