@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

Package UI <<Folder>>{
class ListMyAgendaUI {
    +run()
}
}

Package Controller <<Folder>>{
class CreateEntryToAgendaController {
    - agendaRepository : AgendaRepository
    - authenticationRepository:AuthenticationRepository

    - getEmployeeFromSession()
    + getAllEntries()
    + getSortedEntriesByDate(List<Entry> sortedEntries)
}
}

Package Repository <<Folder>>{
class Repositories{
    - instance: Repositories
    - authenticationRepository: AuthenticationRepository
    - collaboratorRepository: CollaboratorRepository
    - greenSpacesRepository: GreenSpacesRepository

    + getInstance()
    + getAuthenticationRepository()
    + getCollaboratorRepository()
    + getGreenSpacesRepository()
}
}

Package Repository <<Folder>>{
class AgendaRepository{
    +getAllEntries() : List<Entry>
}
}

Package Repository <<Folder>>{
class AuthenticationRepository{
    + getEmployeeFromSession()
}
}

Package Domain <<Folder>>{
class Collaborator{
    -name:String
    -birthdate:Date
    -admissionDate:Date
    -address
    -mobileContact:String
    -emailContact:String
    -IDdocType:String
    -IDnumber:String
    -taxNumber:String
    -job:Job
    -skills:ArrayList<Skill>

    +Collaborator (String nome,LocalDate dateOfBirth,\nLocalDate admissionDate, String morada, int telemovel,\nString email, String idDocType, int docTypeNumber,\nint taxPayerIdNumber, String role, Job job, ArrayList<Skill> skills)
}
}

Package Domain <<Folder>>{
class Entry {
    - String name
    - String description
    - String urgencyDegree
    - int duration
    - String classification
    - GreenSpace greenSpace
    - String status
    - LocalDate entryDate
    - int hour
    - LocalTime startTime
    - LocalTime endTime
    - Team team

    + Entry(String name, String description, \nString urgencyDegree, int duration, \nGreenSpace greenSpace, LocalDate entryDate, \nint hour, Team team)
}
}

ListMyAgendaUI "1" ..> "1" CreateEntryToAgendaController

CreateEntryToAgendaController "1" --> "1" Repositories : getInstance
CreateEntryToAgendaController --> AgendaRepository : agendaRepository
CreateEntryToAgendaController --> AuthenticationRepository : authenticationRepository
CreateEntryToAgendaController --> Collaborator

Repositories -> Repositories : instance
Repositories "1" ..> "1" AgendaRepository : create
Repositories "1" --> "1" AuthenticationRepository : getCurrentUserSession

AgendaRepository --> Entry : have

Collaborator --> Entry

@enduml