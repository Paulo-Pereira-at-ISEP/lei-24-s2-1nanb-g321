@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Green Space Manager" as GSM
participant ":AddVehiclesToAgendaEntryUI" as UI
participant ":AddVehiclesToAgendaEntryController" as controller
participant ":Repositories" as singleton
participant "repositories\n:Repositories" as rep
participant "agendaRepository\n:AgendaRepository" as agendaRepository
participant "vehicleRepository\n:VehicleRepository" as vehicleRepository
participant "authenticationRepository\n:AuthenticationRepository" as AUTH_REPO
participant "userSession\n:UserSession" as USR_SESSION
participant "employee\n: Employee" as MGR
participant ":Entry" as entry


note right of GSM
    - The user is already logged in at this step.
    - Authentication sequence is explained in
    a sequence excerpt.
end note

note right of singleton
    - Singleton is
    in use
end note

activate GSM

        GSM -> UI :Asks to assign one ore more vehicle to an entry in the Agenda

        activate UI

            UI -> controller** : create

            UI -> controller : getEntriesFromAgendaStartingFrom(currentDate, status="Planned")
            activate controller

                controller -> singleton : getInstance()
                activate singleton

                    singleton --> controller: repositories
                deactivate singleton

                controller -> singleton : getEmployeeFromSession()

                note right of controller
                    - This method is explained
                    in detail in an excerpt
                    sequence diagram.
                end note

                activate singleton

                singleton --> controller : employee

                deactivate singleton

                controller -> rep : getAgendaRepository()
                activate rep

                    rep --> controller: agendaRepository
                deactivate rep

                controller -> agendaRepository : getEntriesFromAgendaStartingFrom(currentDate, status="Planned")
                activate agendaRepository

                    agendaRepository --> controller : futureEntries

                deactivate agendaRepository

                controller --> UI : futureEntries


            deactivate controller

            UI --> GSM : Shows the entries from the Agenda


        deactivate UI

        GSM -> UI :Selects the entry from the Agenda

            activate UI

                UI -> controller : getAvailableVehiclesWithinTime(selectedEntry)

                activate controller

                    controller -> MGR: getVehiclesInUseWithinTime(selectedEntryExecutionTIme, futureEntries)

                    activate MGR

                    MGR --> controller:  vehiclesAlreadyInUseWithinTime

                    |||
                    |||

                    deactivate MGR

                    controller -> rep: getVehicleRepository()

                    activate rep

                        rep --> controller: vehicleRepository

                    deactivate rep

                    controller -> vehicleRepository: getAllVehicles()

                    activate vehicleRepository

                    vehicleRepository --> controller : listOfAllVehicles

                    deactivate vehicleRepository

                    |||
                    |||

                    controller -> MGR: filterVehicles(vehiclesAlreadyInUseWithinTime, listOfAllVehicles)

                    activate MGR

                    MGR --> controller: availableVehicles

                    deactivate MGR

                    controller-->UI: availableVehicles

                deactivate controller




                UI --> GSM: Shows the available Vehicles

            deactivate UI

        GSM -> UI : Selects one or more from the available vehicles

            activate UI

            UI --> GSM:Shows selected data and requests confirmation

            deactivate UI

        GSM -> UI : Confirms data

            activate UI


            UI -> controller : addVehiclesToEntry(selectedEntry, selectedVehicles)

                activate controller

                controller -> MGR : addVehiclesToEntry(selectedEntry, selectedVehicles)

                    activate MGR

                        MGR -> entry: addVehicles(selectedVehicles)

                            activate entry

                                entry-->MGR: alteredEntry

                            deactivate entry

                        MGR --> controller : alteredEntry

                    deactivate MGR

                controller --> UI : alteredEntry

                deactivate controller

                UI --> GSM :Shows operations success message

            deactivate UI

deactivate GSM

@enduml
